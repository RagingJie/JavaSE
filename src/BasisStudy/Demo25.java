package BasisStudy;

/**
 * 强制类型转换的原理：转换为二进制，补码
 * 正数：原码、反码、补码是本身
 * 负数：原码：符号位为1 反码：为除了符号位以外的其他位数值取反  补码：反码加 1
 * ------补码的补码是原码-------
 */
public class Demo25 {
    public static void main(String[] args) {
        int a = 200;  //因为int占用4个字节，32个比特位，所以二进制表示为：0000 0000 0000 0000 0000 0000 1100 1000
        byte b = (byte) a;  //byte占用一个字节，8个比特位，所以强制转换时，将前面的0直接去掉，变为 1100 1000 这是的数值为补码，将其转换为反码为：1011 0111 原码为：1011 1000 前面的第一位为符号位（0表示正，11表示负），所以其对应的十进制数为：-56
        System.out.println(b);
    }
}
